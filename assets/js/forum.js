const input = document.getElementById('triggerInput');
const reviewForm = document.getElementById('reviewForm');
const cancelBtn = document.getElementById('cancelButton');
const submitBtn = document.getElementById('submitButton');
const imageInput = document.getElementById('imageInput');
const imagePreview = document.getElementById('imagePreview');

input.addEventListener('focus', () => {
    reviewForm.style.display = 'block';
    input.style.display = 'none';
});

cancelBtn.addEventListener('click', () => {
    reviewForm.style.display = 'none';
    input.style.display = 'block';
    input.value = '';
    imageInput.value = '';
    imagePreview.src = '';
    imagePreview.style.display = 'none';
});
submitBtn.addEventListener('click', (e) => {
    e.preventDefault(); // ch·∫∑n g·ª≠i form th·∫≠t

    // Hi·ªán th√¥ng b√°o (c√≥ th·ªÉ d√πng alert ho·∫∑c toast tu·ª≥ b·∫°n)
    alert("üéâ B√†i vi·∫øt ƒë√£ ƒë∆∞·ª£c ƒëƒÉng th√†nh c√¥ng!");

    // Reset form v√† hi·ªÉn th·ªã l·∫°i input
    resetForm();
});

function resetForm() {
    reviewForm.style.display = 'none';
    input.style.display = 'block';
    input.value = '';
    imageInput.value = '';
    imagePreview.src = '';
    imagePreview.style.display = 'none';
    document.getElementById('titleInput').value = '';
    document.getElementById('contentInput').value = '';
}

imageInput.addEventListener('change', (event) => {
    const file = event.target.files[0];
    if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
            imagePreview.src = e.target.result;
            imagePreview.style.display = 'block';
        };
        reader.readAsDataURL(file);
    }
});

document.addEventListener('DOMContentLoaded', function() {
    // T√¨m t·∫•t c·∫£ c√°c n√∫t b√¨nh lu·∫≠n
    const commentButtons = document.querySelectorAll('.comment-toggle');

    // Th√™m s·ª± ki·ªán click cho t·ª´ng n√∫t
    commentButtons.forEach(button => {
        button.addEventListener('click', function() {
            // T√¨m ph·∫ßn b√¨nh lu·∫≠n g·∫ßn nh·∫•t trong c√πng b√†i ƒëƒÉng
            const commentSection = this.closest('.card-body').querySelector('.comment-section');

            // Hi·ªÉn th·ªã/·∫©n ph·∫ßn b√¨nh lu·∫≠n
            if (commentSection.style.display === 'none') {
                commentSection.style.display = 'block';
                // ƒê·ªïi m√†u n√∫t khi ƒë∆∞·ª£c k√≠ch ho·∫°t
                this.classList.add('active');
            } else {
                commentSection.style.display = 'none';
                // B·ªè m√†u khi kh√¥ng c√≤n k√≠ch ho·∫°t
                this.classList.remove('active');
            }
        });
    });
});